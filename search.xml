<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown 基本语法</title>
      <link href="/hexoblog/2021/05/21/markdown-yu-fa/"/>
      <url>/hexoblog/2021/05/21/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<p>什么是Markdown？Markdown是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。</p><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。但是，Markdown 处理程序之间存在着细微的变化和差异，文中会尽可能标记出来。</p><hr><h2 id="1-标题（Headings）">1 标题（Headings）</h2><p>要创建标题，请在单词或短语前面添加井号 (#) 。井号的数量代表了标题的级别。例如，添加三个井号即创建一个三级标题 (<code>&lt;h3&gt;</code>) (例如：### My Header)。</p><p><strong>Markdown标题的代码如下，在标题符号#后面需加一个空格，共 6 级标题</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span>  一级标题（1 Markdown 语法）</span><span class="token title important"><span class="token punctuation">##</span>  二级标题（1.1 什么是 Markdown）</span><span class="token title important"><span class="token punctuation">###</span>  三级标题（1.1.1 Markdown 创始人）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>代码在界面中展示结果如下</code></p><h3 id="三级标题（1-1-1-Markdown-创始人）">三级标题（1.1.1 Markdown 创始人）</h3><h4 id="四级标题（1-1-1-1-Markdown-受众）">四级标题（1.1.1.1 Markdown 受众）</h4><h5 id="五级标题（1-1-1-1-1-对Markdown的评价）">五级标题（1.1.1.1.1 对Markdown的评价）</h5><h3 id="可选语法">可选语法</h3><p>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 – 号来标识二级标题。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important">Heading level 1<span class="token punctuation">===============</span></span><span class="token title important">Heading level 2<span class="token punctuation">---------------</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标题（Heading）用法的最佳实践">标题（Heading）用法的最佳实践</h3><p>当井号（#）和标题文本之间没有空格时，各 Markdown 应用程序的处理方式是不一样的。为了兼容考虑，请在井号和标题文本之间添加一个空格。</p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code># Here's a Heading</code></td><td style="text-align:left"><code>#Here's a Heading</code></td></tr></tbody></table><h2 id="2-段落（Paragraphs）">2 段落（Paragraphs）</h2><p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p><p><em>例如，markdown代码如下</em></p><pre class="line-numbers language-none"><code class="language-none">Markdown 是一个 Web 上使用的文本到 HTML 的转换工具，可以通过简单、易读易写的文本格式生成结构化的 HTML 文档。目前 github、Stackoverflow、 知乎等网站均支持这种格式。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>在页面中展示的结果如下</em></p><p>Markdown 是一个 Web 上使用的文本到 HTML 的转换工具，可以通过简单、易读易写的文本格式生成结构化的 HTML 文档。</p><p>目前 github、Stackoverflow、 知乎等网站均支持这种格式。</p><h3 id="段落（Paragraph）用法的最佳实践">段落（Paragraph）用法的最佳实践</h3><p>除非 段落在列表中，否则不要用空格（spaces）或制表符（ tabs）缩进段落。</p><p><s>用<code>全角的n个空格</code>实现，其中n一般为2，表示首行缩进两个字符。</s></p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>Don't put tabs or spaces in front of your paragraphs.</code></td><td style="text-align:left"><code>  This can result in unexpected formatting problems.</code></td></tr><tr><td style="text-align:left"><code>Keep lines left-aligned like this.</code></td><td style="text-align:left"><code>  Don't add tabs or spaces in front of paragraphs.</code></td></tr></tbody></table><h2 id="3-换行（Line-Breaks）">3 换行（Line Breaks）</h2><p>在一行的末尾添加两个或多个空格，然后按回车键（return），即可创建一个换行（line break） (<code>&lt;br&gt;</code>)。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是第一行。  然后第二行。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这是第一行。<br>然后第二行。</p><h3 id="换行（Line-Break）用法的最佳实践">换行（Line Break）用法的最佳实践</h3><p>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行 (称为 “结尾空格（trailing whitespace）”) 的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能需要使用除结尾空格以外的其它方式来进行换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的 <code>&lt;br&gt;</code> 标签。</p><p>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><p>还有两种其他方式我并不推荐使用。CommonMark 和其它几种轻量级标记语言支持在行尾添加反斜杠 () 的方式实现换行，但是并非所有 Markdown 应用程序都支持此种方式，因此从兼容性的角度来看，不推荐使用。并且至少有两种轻量级标记语言支持无须在行尾添加任何内容，只须键入回车键（ return）即可实现换行。</p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>这是第一行。  </code></td><td style="text-align:left"><code>这是第一行。\</code></td></tr><tr><td style="text-align:left"><code>这是第二行。</code></td><td style="text-align:left"><code>这是第二行。</code></td></tr></tbody></table><h2 id="4-强调（Emphasis）">4 强调（Emphasis）</h2><p>通过将文本设置为粗体或斜体来强调其重要性。</p><h3 id="粗体（Bold）">粗体（Bold）</h3><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p><table><thead><tr><th style="text-align:left">Markdown</th><th style="text-align:left">HTML</th><th style="text-align:left">渲染效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>I just love **bold text**.</code></td><td style="text-align:left"><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td style="text-align:left">I just love <strong>bold text</strong>.</td></tr><tr><td style="text-align:left"><code>I just love __bold text__.</code></td><td style="text-align:left"><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td style="text-align:left">I just love <strong>bold text</strong>.</td></tr><tr><td style="text-align:left"><code>Love **is** bold</code></td><td style="text-align:left"><code>Love &lt;strong&gt;is&lt;/strong&gt; bold</code></td><td style="text-align:left">Love<strong>is</strong>bold</td></tr></tbody></table><h4 id="粗体（Bold）用法最佳实践">粗体（Bold）用法最佳实践</h4><p>Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>Love**is**bold</code></td><td style="text-align:left"><code>Love__is__bold</code></td></tr></tbody></table><h3 id="斜体（Italic）">斜体（Italic）</h3><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><table><thead><tr><th style="text-align:left">Markdown</th><th style="text-align:left">HTML</th><th style="text-align:left">渲染效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>Italicized text is the *cat's meow*.</code></td><td style="text-align:left"><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td><td style="text-align:left">Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td style="text-align:left"><code>Italicized text is the _cat's meow_.</code></td><td style="text-align:left"><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td><td style="text-align:left">Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td style="text-align:left"><code>A*cat*meow</code></td><td style="text-align:left"><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td><td style="text-align:left">A<em>cat</em>meow</td></tr></tbody></table><h4 id="斜体（Italic）用法的最佳实践">斜体（Italic）用法的最佳实践</h4><p>Markdown 的众多应用程序在如何处理单词中间的下划线上意见不一致。为了兼容起见，请用星号标注单词中间的斜体来表示着重。</p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>A*cat*meow</code></td><td style="text-align:left"><code>A_cat_meow</code></td></tr></tbody></table><h3 id="粗体（Bold）和斜体（Italic）">粗体（Bold）和斜体（Italic）</h3><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><table><thead><tr><th style="text-align:left">Markdown</th><th style="text-align:left">HTML</th><th style="text-align:left">渲染效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>This text is ***really important***.</code></td><td style="text-align:left"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align:left">This text is <em><strong>really important</strong></em>.</td></tr><tr><td style="text-align:left"><code>This text is ___really important___.</code></td><td style="text-align:left"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align:left">This text is <em><strong>really important</strong></em>.</td></tr><tr><td style="text-align:left"><code>This text is __*really important*__.</code></td><td style="text-align:left"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align:left">This text is <strong><em>really important</em></strong>.</td></tr><tr><td style="text-align:left"><code>This text is **_really important_**.</code></td><td style="text-align:left"><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td style="text-align:left">This text is <strong><em>really important</em></strong>.</td></tr><tr><td style="text-align:left"><code>This is really***very***important text.</code></td><td style="text-align:left"><code>This is really&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important text.</code></td><td style="text-align:left">This is really<em><strong>very</strong></em>important text.</td></tr></tbody></table><h4 id="粗体（Bold）和斜体（Italic）用法的最佳实践">粗体（Bold）和斜体（Italic）用法的最佳实践</h4><p>Markdown 应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。</p><table><thead><tr><th style="text-align:left">✅   这样做</th><th style="text-align:left">❌   不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>This is really***very***important text.</code></td><td style="text-align:left"><code>This is really___very___important text.</code></td></tr></tbody></table><h2 id="5-块引用（Blockquotes）">5 块引用（Blockquotes）</h2><p>要创建块引用，请在段落前添加一个 &gt; 符号。</p><pre class="line-numbers language-none"><code class="language-none">&gt; Dorothy followed her through many of the beautiful rooms in her castle.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下所示：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><h3 id="多个段落的块引用（Blockquotes）">多个段落的块引用（Blockquotes）</h3><p>块引用可以包含多个段落。为段落之间的空白行各添加一个 &gt; 符号。</p><pre class="line-numbers language-none"><code class="language-none">&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote><h3 id="嵌套块引用（Nested-Blockquotes）">嵌套块引用（Nested Blockquotes）</h3><p>块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号。</p><pre class="line-numbers language-none"><code class="language-none">&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.</p><blockquote><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote></blockquote><h3 id="带有其它元素的块引用（Blockquotes-with-Other-Elements）">带有其它元素的块引用（Blockquotes with Other Elements）</h3><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p><pre class="line-numbers language-none"><code class="language-none">&gt; #### The quarterly results look great!&gt;&gt; - Revenue was off the chart.&gt; - Profits were higher than ever.&gt;&gt;  *Everything* is going according to **plan**.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><blockquote><h4 id="The-quarterly-results-look-great">The quarterly results look great!</h4><ul><li>Revenue was off the chart.</li><li>Profits were higher than ever.</li></ul><p><em>Everything</em> is going according to <strong>plan</strong>.</p></blockquote><h2 id="6-列表（Lists）">6 列表（Lists）</h2><p>你可以将多个条目组织成有序或无序列表。</p><h3 id="有序列表（Ordered-Lists）">有序列表（Ordered Lists）</h3><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p><pre class="line-numbers language-none"><code class="language-none">1. 早餐2. 午餐3. 晚餐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>{==如下==}</p><ol><li>早餐</li><li>午餐</li><li>晚餐</li></ol><h4 id="有序列表（Ordered-List）用法的最佳实践">有序列表（Ordered List）用法的最佳实践</h4><p>CommonMark 和其它几种轻量级标记语言可以让你使用括号（)）作为分隔符（例如 1) First item），但并非所有的 Markdown 应用程序都支持此种用法，因此，从兼容的角度来看，此用法不推荐。为了兼容起见，请只使用英文句点作为分隔符。</p><table><thead><tr><th style="text-align:left">✅  这样做</th><th style="text-align:left">❌  不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>1. First item</code></td><td style="text-align:left"><code>1) First item</code></td></tr><tr><td style="text-align:left"><code>2. Second item</code></td><td style="text-align:left"><code>2) Second item</code></td></tr></tbody></table><h3 id="无序列表（Unordered-Lists）">无序列表（Unordered Lists）</h3><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p><pre class="line-numbers language-none"><code class="language-none">* 早餐* 午餐* 晚餐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>{==如下==}</p><ul><li>早餐</li><li>午餐</li><li>晚餐</li></ul><h4 id="以数字开头的无序列表项">以数字开头的无序列表项</h4><p>如果你需要以数字开头并且紧跟一个英文句号（也就是 .）的无序列表项，则可以使使用反斜线（\）来 转义 这个英文句号。</p><pre class="line-numbers language-none"><code class="language-none">- 1968\. A great year!- I think 1969 was second best.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>{==如下==}</p><ul><li>1968. A great year!</li><li>I think 1969 was second best.</li></ul><h4 id="无序列表（Unordered-List）用法的最佳实践">无序列表（Unordered List）用法的最佳实践</h4><p>Markdown 应用程序在如何处理同一列表中混用不同分隔符上并不一致。为了兼容起见，请不要在同一个列表中混用不同的分隔符，最好选定一种分隔符并一直用下去。</p><table><thead><tr><th style="text-align:left">✅  这样做</th><th style="text-align:left">❌  不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>- First item</code></td><td style="text-align:left"><code>+ First item</code></td></tr><tr><td style="text-align:left"><code>- Second item</code></td><td style="text-align:left"><code>* Second item</code></td></tr><tr><td style="text-align:left"><code>- Third item</code></td><td style="text-align:left"><code>- Third item</code></td></tr><tr><td style="text-align:left"><code>- Fourth item</code></td><td style="text-align:left"><code>+ Fourth item</code></td></tr></tbody></table><h3 id="在列表中添加列表项">在列表中添加列表项</h3><p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符，如下例所示：</p><h4 id="段落（Paragraphs）">段落（Paragraphs）</h4><pre class="line-numbers language-none"><code class="language-none">*   This is the first list item.*   Here&#39;s the second list item.    I need to add another paragraph below the second list item.*   And here&#39;s the third list item.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><p>I need to add another paragraph below the second list item.</p></li><li><p>And here’s the third list item.</p></li></ul><h4 id="引用块（Blockquotes）">引用块（Blockquotes）</h4><pre class="line-numbers language-none"><code class="language-none">*   This is the first list item.*   Here&#39;s the second list item.    &gt; A blockquote would look great below the second list item.*   And here&#39;s the third list item.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><ul><li><p>This is the first list item.</p></li><li><p>Here’s the second list item.</p><blockquote><p>A blockquote would look great below the second list item.</p></blockquote></li><li><p>And here’s the third list item.</p></li></ul><h4 id="代码块（Code-Blocks）">代码块（Code Blocks）</h4><p>代码块（Code blocks） 通常采用四个空格或一个制表符缩进。当它们被放在列表中时，请将它们缩进八个空格或两个制表符。</p><pre class="line-numbers language-none"><code class="language-none">1.  Open the file.2.  Find the following code block on line 21:        &lt;html&gt;          &lt;head&gt;            &lt;title&gt;Test&lt;&#x2F;title&gt;          &lt;&#x2F;head&gt;3.  Update the title to match the name of your website.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><ol><li><p>Open the file.</p></li><li><p>Find the following code block on line 21:</p><pre><code>&lt;html&gt;  &lt;head&gt;    &lt;title&gt;Test&lt;/title&gt;  &lt;/head&gt;</code></pre></li><li><p>Update the title to match the name of your website.</p></li></ol><h4 id="图片（Images）">图片（Images）</h4><pre class="line-numbers language-none"><code class="language-none">1.  Open the file containing the Linux mascot.2.  Marvel at its beauty.    ![Tux, the Linux mascot](&#x2F;images&#x2F;tux.png)3.  Close the file.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><ol><li>Open the file containing the Linux mascot.</li><li>Marvel at its beauty.</li></ol><p><img src="https://www.markdown.xyz/assets/images/tux.png" alt="Tux, the Linux mascot"></p><ol start="3"><li>Close the file.</li></ol><h4 id="列表（Lists）">列表（Lists）</h4><p>你可以将无序列表嵌套在有序列表中，反之亦然。</p><pre class="line-numbers language-none"><code class="language-none">1. First item2. Second item3. Third item    - Indented item    - Indented item4. Fourth item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><ol><li>First item</li><li>Second item</li><li>Third item<ul><li>Indented item</li><li>Indented item</li></ul></li><li>Fourth item</li></ol><h2 id="7-代码">7 代码</h2><p>要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。</p><table><thead><tr><th style="text-align:left">Markdown</th><th style="text-align:left">HTML</th><th style="text-align:left">渲染效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>At the command prompt, type `nano`.</code></td><td style="text-align:left"><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td><td style="text-align:left">At the command prompt, type <code>nano</code>.</td></tr></tbody></table><h3 id="转义反引号">转义反引号</h3><p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(``)中。</p><table><thead><tr><th style="text-align:left">Markdown</th><th style="text-align:left">HTML</th><th style="text-align:left">渲染效果</th></tr></thead><tbody><tr><td style="text-align:left"><code>``Use</code>code<code>in your Markdown file.``</code></td><td style="text-align:left"><code>Use <code>code</code> in your Markdown file.</code></td><td style="text-align:left">Use <code>code</code> in your Markdown file.</td></tr></tbody></table><h3 id="代码块（Code-Blocks）-2">代码块（Code Blocks）</h3><p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。</p><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt;  &lt;head&gt;  &lt;&#x2F;head&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><pre><code>&lt;html&gt;  &lt;head&gt;  &lt;/head&gt;&lt;/html&gt;</code></pre><blockquote><p>注意： 要创建不用缩进的代码块，请使用 <a href="https://www.markdown.xyz/extended-syntax/#fenced-code-blocks">围栏式代码块（fenced code blocks</a> ）.</p></blockquote><h2 id="8-分隔线（Horizontal-Rules）">8 分隔线（Horizontal Rules）</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。</p><pre class="line-numbers language-none"><code class="language-none">***---_________________<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上三个分隔线的渲染效果看起来都一样：</p><hr><hr><hr><h3 id="分隔线（Horizontal-Rule）用法最佳实践">分隔线（Horizontal Rule）用法最佳实践</h3><p>为了兼容性，请在分隔线的前后均添加空白行。</p><p>✅  这样做</p><pre class="line-numbers language-none"><code class="language-none">Try to put a blank line before...---...and after a horizontal rule.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>❌  不要这样做</p><pre class="line-numbers language-none"><code class="language-none">Without blank lines, this would be a heading.---Don&#39;t do this!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="9-链接（Links）">9 链接（Links）</h2><p>要创建链接，请将链接文本括在方括号（例如 [Duck Duck Go]）中，后面紧跟着括在圆括号中的 URL（例如 (<a href="https://duckduckgo.com">https://duckduckgo.com</a>) ）。</p><pre class="line-numbers language-none"><code class="language-none">My favorite search engine is [Duck Duck Go](https:&#x2F;&#x2F;duckduckgo.com).<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p>My favorite search engine is <a href="https://duckduckgo.com">Duck Duck Go</a>.</p><p>添加标题<br>你可以选择为链接添加标题（即 title 属性）。当用户将鼠标悬停在链接上时，将显示一个提示。要添加标题，请将其放在 URL 后面。</p><pre class="line-numbers language-none"><code class="language-none">My favorite search engine is [Duck Duck Go](https:&#x2F;&#x2F;duckduckgo.com &quot;The best search engine for privacy&quot;).<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p>My favorite search engine is <a href="https://duckduckgo.com" title="The best search engine for privacy">Duck Duck Go</a>.</p><p>网址和电子邮件地址<br>要将 URL 或电子邮件地址快速转换为链接，请将其括在尖括号中。</p><pre class="line-numbers language-none"><code class="language-none">&lt;https:&#x2F;&#x2F;www.markdownguide.org&gt;&lt;fake@example.com&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>渲染效果如下：</p><p><a href="https://www.markdownguide.org">https://www.markdownguide.org</a><br><a href="mailto:fake@example.com">fake@example.com</a></p><p>格式化链接<br>如需 强调（emphasize） 某个链接, 请在方括号前及圆括号后添加星号。要将链接表示为 代码（code） ，请在方括号内添加反引号。</p><pre class="line-numbers language-none"><code class="language-none">I love supporting the **[EFF](https:&#x2F;&#x2F;eff.org)**.This is the *[Markdown Guide](https:&#x2F;&#x2F;www.markdownguide.org)*.See the section on [&#96;code&#96;](#code).<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染效果如下：</p><p>I love supporting the <strong><a href="https://eff.org">EFF</a></strong>.<br>This is the <em><a href="https://www.markdownguide.org">Markdown Guide</a></em>.<br>See the section on <a href="#code"><code>code</code></a>.</p><p>引用式链接<br>引用式（Reference-style）链接是一种特殊类型的链接，它使得 URL 在 Markdown 中更易于显示和阅读。引用式链接由两部分组成：一部分被放置在正文文本中；另一部分被放置在文档中的其它地方，以便于阅读。</p><p>引用式链接第一部分的格式<br>引用式链接的第一部分的格式由两组方括号组成。第一组方括号内放的是显示为链接的文本，第二组方括号内放的是一个标签，该标签用于指向您存放在文档中其它位置的链接。</p><p>尽管不是必须的，但你可以在第一组和第二组方括号之间添加一个空格。第二组方括号中的标签不区分大小写，并且可以包含字母、数字、空格或标点符号。</p><p>以下示例中，链接的第一部分是等效的：</p><p><a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">hobbit-hole</a><br>[hobbit-hole] <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">1</a><br>引用式链接第二部分的格式<br>引用式链接的第二部分可以包含以下属性：</p><p>放在方括号内的标签，以及紧跟在方括号后面的一个冒号和至少一个空格（例如 [label]: ）。<br>链接的 URL，可以选择将其括在尖括号内。<br>链接的标题（可有可无），可以将其括在双引号、单引号或括号内。<br>以下示例中，链接的第二部分是等效的：</p><p>可以将链接的第二部分放在 Markdown 文档中的任何位置。有些人将它们放在被引用的段落的后面，有些人将它们放在文档的末尾（类似尾注或脚注）。</p><p>将两部分组合在一起使用的示例<br>假设你将一个 URL 作为一个 标准 URL 链接 添加到段落中，在 Markdown 中如下所示：</p><p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends<br>of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to<br>eat: it was a <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle" title="Hobbit lifestyles">hobbit-hole</a>, and that means comfort.<br>Though it may point to interesting additional information, the URL as displayed really doesn’t add much to the existing raw text other than making it harder to read. To fix that, you could format the URL like this instead:</p><p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends<br>of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to<br>eat: it was a <a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle">hobbit-hole</a>, and that means comfort.</p><p>在上述两个实例中，渲染后的输出是相同的：</p><p>In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole, and that means comfort.</p><p>该链接的 HTML 为：</p><p><a href="https://en.wikipedia.org/wiki/Hobbit#Lifestyle" title="Hobbit lifestyles">hobbit-hole</a></p><h3 id="链接（Link）的最佳使用实践">链接（Link）的最佳使用实践</h3><p>不同的 Markdown 应用程序在处理 URL 中间的空格方面是不一样的。为了兼容起见，请尽量使用 %20 （空格的编码形式）来代替空格。</p><table><thead><tr><th style="text-align:left">✅  这样做</th><th style="text-align:left">❌  不要这样做</th></tr></thead><tbody><tr><td style="text-align:left"><code>[link](https://www.example.com/my%20great%20page)</code></td><td style="text-align:left"><code>[link](https://www.example.com/my great page)</code></td></tr></tbody></table><h2 id="10-图片（Images）">10 图片（Images）</h2><p>要添加图片，首先请添加感叹号（!），然后紧跟着是方括号，方括号中可添加替代文本（alt text，即图片显示失败后显示此文本），最后跟着圆括号，圆括号中添加图片资源的路径或 URL。你可以选择在圆括号中的 URL 之后添加标题（即 title 属性）。</p><pre class="line-numbers language-none"><code class="language-none">![Philadelphia&#39;s Magic Gardens. This place was so cool!](https:&#x2F;&#x2F;www.markdown.xyz&#x2F;assets&#x2F;images&#x2F;philly-magic-garden.jpg &quot;Philadelphia&#39;s Magic Gardens&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p><img src="https://www.markdown.xyz/assets/images/philly-magic-garden.jpg" alt="Philadelphia's Magic Gardens. This place was so cool!" title="Philadelphia's Magic Gardens"></p><p>带链接的图片<br>要为图片添加链接，请先为图片的 Markdown 标记添加一个方括号，然后紧跟着一个圆括号，并在圆括号中添加链接地址。</p><pre class="line-numbers language-none"><code class="language-none">[![An old rock in the desert](&#x2F;assets&#x2F;images&#x2F;shiprock.jpg &quot;Shiprock, New Mexico by Beau Rogers&quot;)](https:&#x2F;&#x2F;www.flickr.com&#x2F;photos&#x2F;beaurogers&#x2F;31833779864&#x2F;in&#x2F;photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p><a href="https://www.flickr.com/photos/beaurogers/31833779864/in/photolist-Qv3rFw-34mt9F-a9Cmfy-5Ha3Zi-9msKdv-o3hgjr-hWpUte-4WMsJ1-KUQ8N-deshUb-vssBD-6CQci6-8AFCiD-zsJWT-nNfsgB-dPDwZJ-bn9JGn-5HtSXY-6CUhAL-a4UTXB-ugPum-KUPSo-fBLNm-6CUmpy-4WMsc9-8a7D3T-83KJev-6CQ2bK-nNusHJ-a78rQH-nw3NvT-7aq2qf-8wwBso-3nNceh-ugSKP-4mh4kh-bbeeqH-a7biME-q3PtTf-brFpgb-cg38zw-bXMZc-nJPELD-f58Lmo-bXMYG-bz8AAi-bxNtNT-bXMYi-bXMY6-bXMYv"><img src="https://www.markdown.xyz/assets/images/shiprock.jpg" alt="An old rock in the desert" title="Shiprock, New Mexico by Beau Rogers"></a></p><h2 id="11-转义字符（Escaping-Characters）">11 转义字符（Escaping Characters）</h2><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 () 。</p><pre class="line-numbers language-none"><code class="language-none">\* 如果没有开头的反斜杠字符的话，这一行将显示为无序列表。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p>* 如果没有开头的反斜杠字符的话，这一行将显示为无序列表。</p><h3 id="可做转义的（英文）字符">可做转义的（英文）字符</h3><p>以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。</p><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">名称</th></tr></thead><tbody><tr><td style="text-align:left">\</td><td style="text-align:left">反斜杠（backslash）</td></tr><tr><td style="text-align:left">`</td><td style="text-align:left">backtick (另请参见 <a href="https://www.markdown.xyz/basic-syntax/#escaping-backticks">在代码中转义反引号</a>)</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">星号（asterisk）</td></tr><tr><td style="text-align:left">_</td><td style="text-align:left">下划线（underscore）</td></tr><tr><td style="text-align:left">{ }</td><td style="text-align:left">花括号（curly braces）</td></tr><tr><td style="text-align:left">[ ]</td><td style="text-align:left">方括号（brackets）</td></tr><tr><td style="text-align:left">&lt; &gt;</td><td style="text-align:left">angle brackets</td></tr><tr><td style="text-align:left">( )</td><td style="text-align:left">圆括号或括号（parentheses）</td></tr><tr><td style="text-align:left">#</td><td style="text-align:left">井号（pound sign）</td></tr><tr><td style="text-align:left">+</td><td style="text-align:left">加号（plus sign）</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减号（minus sign） (也叫连字符 hyphen)</td></tr><tr><td style="text-align:left">.</td><td style="text-align:left">句点（dot）</td></tr><tr><td style="text-align:left">!</td><td style="text-align:left">感叹号（exclamation mark）</td></tr><tr><td style="text-align:left"><code>|</code></td><td style="text-align:left">管道符（pipe） (另请参见 <a href="https://www.markdown.xyz/extended-syntax/#escaping-pipe-characters-in-tables">在表格中转义管道符</a> )</td></tr></tbody></table><h2 id="12-HTML-标签">12 HTML 标签</h2><p>大多 Markdown 应用程序允许你在 Markdown 格式文本中添加 HTML 标签。如果你喜欢某些 HTML 标签胜于 Markdown 语法的话，这将何有帮助。例如，某些人发现通过 HTML 标签添加图像更加容易。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p><p>如需使用 HTML，请将 HTML 标签添加到 Markdown 格式文本中即可。</p><pre class="line-numbers language-none"><code class="language-none">This **word** is bold. This &lt;em&gt;word&lt;&#x2F;em&gt; is italic.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下：</p><p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h3 id="HTML-用法最佳实践">HTML 用法最佳实践</h3><p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看 Markdown 应用程序的文档。某些应用程序只支持 HTML 标签的子集。</p><p>对于 HTML 的块级元素<code> &lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt; </code>将不起作用。</p><h2 id="附录">附录</h2><h3 id="表格">表格</h3><p>代码，根据冒号位置确定居中与否</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token table-header important">First Header </span><span class="token punctuation">|</span><span class="token table-header important"> Second Header </span><span class="token punctuation">|</span><span class="token table-header important"> Third Header</span></span><span class="token table-line"><span class="token punctuation">:-----------</span> <span class="token punctuation">|</span><span class="token punctuation">:-------------:</span><span class="token punctuation">|</span> <span class="token punctuation">-----------:</span></span><span class="token table-data-rows"><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span><span class="token table-data">居左         </span><span class="token punctuation">|</span><span class="token table-data"> 居中        </span><span class="token punctuation">|</span><span class="token table-data"> 居右</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>效果</em></p><table><thead><tr><th style="text-align:left">First Header</th><th style="text-align:center">Second Header</th><th style="text-align:right">Third Header</th></tr></thead><tbody><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr></tbody></table><h3 id="大纲">大纲</h3><p>Markdown代码如下：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> [done] 学术分享<span class="token list punctuation">*</span> [x] 教程制作<span class="token list punctuation">*</span> [x] 讨论班<span class="token list punctuation">*</span> [ ] 网站制作    <span class="token list punctuation">*</span> [x] 基本设计    <span class="token list punctuation">*</span> [x] 样式设计    <span class="token list punctuation">*</span> [ ] 服务器维护    <span class="token list punctuation">*</span> [ ] 正式发布<span class="token list punctuation">*</span> [ ] 展开活动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>效果</strong></p><ul><li>[done] 学术分享</li><li>[x] 教程制作</li><li>[x] 讨论班</li><li>[ ] 网站制作<ul><li>[x] 基本设计</li><li>[x] 样式设计</li><li>[ ] 服务器维护</li><li>[ ] 正式发布</li></ul></li><li>[ ] 展开活动</li></ul><blockquote><p>本文来源 <a href="https://www.markdown.xyz/basic-syntax/">Markdown 指南中文版</a>。</p><p>感谢原作者，以及开源世界。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo多端同步方法</title>
      <link href="/hexoblog/2021/05/21/hexo-duo-duan-tong-bu-fang-fa/"/>
      <url>/hexoblog/2021/05/21/hexo-duo-duan-tong-bu-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>经常我们有一个场景：需要在公司或者家庭多个电脑完成Hexo的博客撰写和发布工作。这就涉及到Hexo多电脑的同步问题。</p><h3 id="过时方案">过时方案</h3><p>网上的方案基本上都是多分支方案。也即，在同一个仓库创建两个分支：</p><p>1.Hexo分支 – 用来保存所有Hexo的源文件<br>2.master分支 – 用来保存Hexo生成的博客文件</p><p>在创建GitHub Pages或者Coding Pages时，以master分支为pages分支。<br>Hexo的deploy指向master分支部署pages，git的管理指向Hexo分支。</p><p>但是这里有一个巨大的问题，就是多分支的方案一定是让完整的Hexo源文件暴露在公开的仓库了。这对一些Hexo博客采用的leancloud阅读次数管理、多说评论等服务的私有secret key也暴露在公开仓库分支了。如果对这些配置的_config.yml进行单独管理的话，又不能在另一台电脑直接git pull同步，非常的麻烦。</p><h3 id="最佳办法">最佳办法</h3><p>所以Hexo最完美的多电脑同步方法是，创建两个仓库：</p><p>1。Hexo私有仓库 – 用来保存所有Hexo的源文件<br>2.master公开仓库 – 用来保存Hexo生成的博客文件</p><p>下面来具体讲讲实现方法。</p><h3 id="基础假设">基础假设</h3><p>这里假设读者已经建立起了Hexo的博客系统了，实现了比方说：</p><p>1.利用hexo d 直接deploy Hexo博客<br>2.实现了Hexo的GitHub和Coding国外和国内的同时发布<br>3.自行定义了例如next的第三方主题</p><p>Let’go!</p><h2 id="1-创建私有仓库">1.创建私有仓库</h2><p>注册一个github账号，然后创建一个私有项目，名称为 <code>myHexo</code></p><h2 id="2-删除第三方git配置">2.删除第三方git配置</h2><p>进入你现有的Hexo文件夹，删除第三方主题的git配置，如对next主题</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm -rf .&#x2F;themes&#x2F;next&#x2F;.git&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-建立本地的git仓库">3.建立本地的git仓库</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-创建-gitignore文件">4.创建.gitignore文件</h2><p>在Hexo的根目录创建一个.gitignore文件，内容为：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">.DS_StoreThumbs.dbdb.json*.lognode_modules&#x2F;public&#x2F;.deploy*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-push到私有仓库">5.push到私有仓库</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git remote add origin git@github.com:&lt;Github账号名称&gt;&#x2F;myHexo.github.gitgit add .git commit -m &quot;my first private hexo&quot;git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>至此，就完成了本地Hexo源码的全备份.</p><h2 id="在另一台电脑进行Hexo写作">在另一台电脑进行Hexo写作</h2><p>上面已经完成了Hexo的全备份，那么如果在另一台电脑进行Hexo编辑呢。<br>当然首先你也要完成node/npm/hexo/git等环境的搭建和配置。</p><h3 id="1-Hexo拉取">1.Hexo拉取</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git clone git@github.com:&lt;Github账号名称&gt;&#x2F;myHexo.github.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样你就拥有了你的所有Hexo源文件</p><h3 id="2-Hexo编写和发布">2.Hexo编写和发布</h3><p>尽管拉取下来了，还需要建立一下Hexo的环境，这里需要格外注意的一点是：<br>千万不要用<code>hexo init</code>命令。原因是当前目录已经建立了git仓库环境, <code>hexo init</code>会覆盖到当前的git环境，重建一个新的，这样和我们的私有Hexo源码仓库脱离了联系。</p><p>正确的做法是：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因为package.json里面已经保存了hexo的必备资源包信息，npm install后Hexo环境就建立起来了。</p><p>接下来就进行正常的编写和发布就好。<br>本地预览的命令还是：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Hexo的发布命令是</p><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-完成Hexo源码仓库的同步">3.完成Hexo源码仓库的同步</h3><p>最后执行<code>git status</code>把更改的新文件<code>git add</code>和<code>git commit</code>，最后<code>git push</code>到私有仓库，又会完成Hexo源码仓库的同步。</p><h2 id="Hexo仓库更新">Hexo仓库更新</h2><p>下次进行Hexo仓库拉取时执行：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git fetch --all #将git上所有文件拉取到本地git reset --hard origin&#x2F;master  #强制将本地内容指向刚刚同步git云端内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>reset 对所拉取的文件不做任何处理，此处不用 pull 是因为本地尚有许多文件，使用 pull 会有一些版本冲突，解决起来也麻烦，而本地的文件都是初始化生成的文件，较拉取的库里面的文件而言基本无用，所以直接丢弃。</p><p>END<br>从此，世界是如此的美好。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hexoblog/2021/05/21/hello-world/"/>
      <url>/hexoblog/2021/05/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ hexo new &quot;My New Post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用EHForwarderBot实现Telegram同时收发多个微信 QQ消息</title>
      <link href="/hexoblog/2019/07/05/ehforwarderbot-shou-fa-xiao-xi/"/>
      <url>/hexoblog/2019/07/05/ehforwarderbot-shou-fa-xiao-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="说明：">说明：</h3><p><code>EH Forwarder Bot</code>是一个可扩展的聊天隧道框架，允许用户一次发送和接收来自多个<code>IM</code>平台的消息，并最终远程管理他们的帐户，目前可以实现的<code>Telegram</code>收发<code>QQ</code>、微信、<code>Facebook Messenger</code>等消息，你也可以同时一起收发<code>N</code>个微信、<code>N</code>个<code>QQ</code>等，这里就说下<code>Telegram</code>收发微信/<code>QQ</code>消息的手动安装及<code>Docker</code>安装。</p><h3 id="收发微信">收发微信</h3><p><strong>项目地址：</strong><a href="https://github.com/blueset/ehForwarderBot">https://github.com/blueset/ehForwarderBot</a></p><p>所使用的模块地址：</p><pre class="line-numbers language-none"><code class="language-none">#Telegram模块https:&#x2F;&#x2F;github.com&#x2F;blueset&#x2F;efb-telegram-master#微信模块https:&#x2F;&#x2F;github.com&#x2F;blueset&#x2F;efb-wechat-slave<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其他模块地址→<a href="https://github.com/blueset/ehForwarderBot/wiki/Channels-Repository">传送门</a>，包括<code>Facebook Messenger</code>等模块，有兴趣的可以看下。</p><p><strong>环境要求：</strong><code>Python 3.6+</code>、<code>EH Forwarder Bot 2.0+</code>、<code>ffmpeg</code>、<code>libmagic</code>、<code>libwebp</code></p><p>手动教程适用于<code>Debian</code>、<code>CentOS</code>、<code>Ubuntu</code>，如果你想用<code>Ubuntu</code>的话，最好使用<code>18.04+</code>版本。</p><h4 id="1、安装依赖">1、安装依赖</h4><pre class="line-numbers language-none"><code class="language-none">#CentOS系统yum install file-devel libwebp-tools git screen -y#Debian&#x2F;Ubuntu系统apt install libwebp-dev libmagic-dev git screen -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、安装Python3-6">2、安装Python3.6</h4><pre class="line-numbers language-none"><code class="language-none">#CentOS系统wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Python3&#x2F;CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh#Debian系统wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Python3&#x2F;Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh#Ubuntu系统apt updateapt install python3-pip python3-setuptools python3-dev -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、安装ffmpeg">3、安装ffmpeg</h4><pre class="line-numbers language-none"><code class="language-none">#下载ffmpeg二进制wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;down&#x2F;ffmpeg&#x2F;ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz#解压文件tar xvf ffmpeg-git-*-static.tar.xz#移动ffmpeg可执行文件mv ffmpeg-git-*&#x2F;ffmpeg  ffmpeg-git-*&#x2F;ffprobe &#x2F;usr&#x2F;bin&#x2F;#删除文件rm -rf ffmpeg-git-*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、安装框架">4、安装框架</h4><pre class="line-numbers language-none"><code class="language-none">#安装稳定版pip3 install ehforwarderbot#安装开发版，建议安装开发版，bug修复快些，功能也新pip3 install git+https:&#x2F;&#x2F;github.com&#x2F;blueset&#x2F;ehforwarderbot.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、安装TG和微信模块">5、安装TG和微信模块</h4><pre class="line-numbers language-none"><code class="language-none">pip3 install efb-telegram-master efb-wechat-slave<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6、启用模块">6、启用模块</h4><p>先新建配置文件夹和配置文件<code>config.yaml</code>，使用命令：</p><pre class="line-numbers language-none"><code class="language-none">#default为配置文件默认的文件夹，你也可以命名为其它的，不会玩的就默认mkdir -p ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;defaultnano ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参考代码为：</p><pre class="line-numbers language-none"><code class="language-none">#请根据实际情况修改master_channel: foo.demo_masterslave_channels:- foo.demo_slave- bar.dummymiddlewares:- foo.null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上对应的均为模块名称，模块参考→<a href="https://github.com/blueset/ehForwarderBot/wiki/Channels-Repository">传送门</a>，比如这里博主只用了<code>Telegram</code>和<code>WeChat</code>模块，所以大致配置为：</p><pre class="line-numbers language-none"><code class="language-none">master_channel: blueset.telegramslave_channels:- blueset.wechat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p><p>这只是登录一个微信号，如果你要同时登录多个微信号，那么配置文件就需要改为：</p><pre class="line-numbers language-none"><code class="language-none">#比如我要同时登录并收发3个微信号master_channel: blueset.telegramslave_channels:- blueset.wechat- blueset.wechat#moe123- blueset.wechat#rats321<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要在后面使用<code>#</code>指定一个<code>ID</code>号，该<code>ID</code>号只能有字母，数字和下划线，即正则表达式<code>[a-zA-Z0-9_]+</code>，想登录几个账户就加几个。如果你使用<code>QQ</code>、<code>Facebook Messenger</code>模块的话，设置方法也一样。</p><h4 id="7、建立TG配置文件">7、建立TG配置文件</h4><p>建立配置文件前需要先获取<code>Telegram</code>的<code>Token</code>和<code>Userid</code>，获取方法如下：</p><pre class="line-numbers language-none"><code class="language-none">#Telegram的Token获取1、在Telegram关注@BotFather2、再到对话框依次输入：&#x2F;start&#x3D;&gt;&#x2F;newbot，然后会要你给机器人命名(如：MoeratsBot)，命名完成会给你一个Token。#Telegram群Userid获取1、先和你的机器人聊天，随便发一句话。2、在浏览器输入https:&#x2F;&#x2F;api.telegram.org&#x2F;botxx:xx&#x2F;getUpdates(其中xx:xx为Token)，然后chat后面的id即为你的userid。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再新建一个<code>Telegram</code>模块配置文件夹和配置文件<code>config.yaml</code>，使用命令：</p><pre class="line-numbers language-none"><code class="language-none">#同样的也建在default文件夹，如果你上面更改了default文件夹，那这里也要更改mkdir ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;blueset.telegramnano ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;blueset.telegram&#x2F;config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>填入以下代码：</p><pre class="line-numbers language-none"><code class="language-none">token: &quot;12345:moerats&quot; admins:- 765432 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。上面所对应的参数分别为<code>Token</code>和<code>Userid</code>。关于<code>Telegram</code>模块的更多玩法可以参考→<a href="https://github.com/blueset/efb-telegram-master">传送门</a>。</p><h4 id="8、启动">8、启动</h4><pre class="line-numbers language-none"><code class="language-none">#该命令会默认从default文件夹读取信息，如果你之前建的是moerats文件夹，那命令应该为ehforwarderbot -p moeratsehforwarderbot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这时候会给一个微信二维码或者二维码链接你，放到浏览器打开扫描登录即可，如果你设置了同时登录多个账户，那设置几个就需要登录几个。</p><p>然后使用<code>Ctrl+C</code>断开运行，再使用命令后台运行：</p><pre class="line-numbers language-none"><code class="language-none">screen -dmS EHF ehforwarderbot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后你的微信消息会通过机器人发送给你，你也可以通过机器人将消息发送给指定好友。</p><h3 id="收发QQ消息">收发QQ消息</h3><pre class="line-numbers language-none"><code class="language-none">提示：这里随便提了下，了解下就行了，建议使用下面Docker方式安装。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所使用的模块地址：</p><pre class="line-numbers language-none"><code class="language-none">#Telegram模块https:&#x2F;&#x2F;github.com&#x2F;blueset&#x2F;efb-telegram-master#QQ模块https:&#x2F;&#x2F;github.com&#x2F;milkice233&#x2F;efb-qq-slave<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>由于方法写的很大概，所以需要你把收发微信的方法看懂，这里<code>EH Forwarder Bot</code>只支持<code>酷Q</code>客户端，一般采用<code>Docker</code>的方法在<code>Linux</code>上安装酷<code>Q</code>，方法很久以前就说过了，参考→<a href="https://www.moerats.com/archives/802/">传送门</a>，不过启动命令变了下，也就是安装<code>wine-coolq</code>的命令。</p><h4 id="安装TG和QQ模块：">安装<code>TG</code>和<code>QQ</code>模块：</h4><pre class="line-numbers language-none"><code class="language-none">pip3 install efb-telegram-master efb-qq-slave<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装wine-coolq：">安装<code>wine-coolq</code>：</h4><pre class="line-numbers language-none"><code class="language-none">mkdir coolq  #包含CoolQ程序文件docker run -ti --rm --name cqhttp-test --net&#x3D;&quot;host&quot; \     -v $(pwd)&#x2F;coolq:&#x2F;home&#x2F;user&#x2F;coolq     &#96;#mount coolq folder&#96; \     -p 9000:9000                         &#96;#网页noVNC端口&#96; \     -p 5700:5700                         &#96;#酷Q对外提供的API接口的端口&#96; \     -e VNC_PASSWD&#x3D;MAX8char               &#96;#请修改VNC密码！！！！&#96; \     -e COOLQ_PORT&#x3D;5700                   &#96;#酷Q对外提供的API接口的端口&#96; \     -e COOLQ_ACCOUNT&#x3D;123456              &#96;#在此输入要登录的QQ号，虽然可选但是建议填入&#96; \     -e CQHTTP_POST_URL&#x3D;http:&#x2F;&#x2F;127.0.0.1:8000   &#96;#efb-qq-slave监听的端口&#x2F;地址用于接受传入的消息&#96; \     -e CQHTTP_SERVE_DATA_FILES&#x3D;yes       &#96;#允许以HTTP方式访问酷Q数据文件&#96; \     -e CQHTTP_ACCESS_TOKEN&#x3D;ac0f790e1fb74ebcaf45da77a6f9de47  &#96;#Access Token&#96; \     -e CQHTTP_POST_MESSAGE_FORMAT&#x3D;array  &#96;# 回传消息时使用数组(必选)&#96; \     richardchien&#x2F;cqhttp:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后使用<code>ip:9000</code>访问<code>noVNC</code>登录<code>酷Q</code>即可。</p><h4 id="新建QQ模块配置文件：">新建<code>QQ</code>模块配置文件：</h4><pre class="line-numbers language-none"><code class="language-none">mkdir ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;milkice.qqnano ~&#x2F;.ehforwarderbot&#x2F;profiles&#x2F;default&#x2F;milkice.qq&#x2F;config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>填入的代码大致如下:</p><pre class="line-numbers language-none"><code class="language-none">Client: CoolQ                         #指定要使用的QQ客户端（此处为CoolQ）CoolQ:    type: HTTP                        #指定efb-qq-slave与酷Q通信的方式 现阶段仅支持HTTP    access_token: ac0f790e1fb74ebcaf45da77a6f9de47    api_root: http:&#x2F;&#x2F;127.0.0.1:5700&#x2F;  # 酷Q API接口地址&#x2F;端口    host: 127.0.0.1                   # efb-qq-slave所监听的地址用于接收消息    port: 8000                        # 同上    is_pro: false                      # 若为酷Q Pro则为true，反之为false    air_option:                       # 包含于air_option的配置选项仅当is_pro为false时才有效        upload_to_smms: true          # 将来自EFB主端(通常是Telegram) 的图片上传到sm.ms服务器并以链接的形式发送到QQ端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后使用<code>ehforwarderbot</code>命令启动即可。</p><h3 id="Docker安装">Docker安装</h3><p>这里选择<code>2</code>个最新的<code>Docker</code>镜像，也是官方推荐的，项目地址：</p><pre class="line-numbers language-none"><code class="language-none">#Telegram收发QQ消息https:&#x2F;&#x2F;github.com&#x2F;Earth-Online&#x2F;efb-qq-coolq-docker#Telegram收发微信消息https:&#x2F;&#x2F;www.github.com&#x2F;Mikubill&#x2F;efb-wechat-docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1、安装Docker">1、安装Docker</h4><pre class="line-numbers language-none"><code class="language-none">#CentOS 6rpm -iUvh http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpmyum update -yyum -y install docker-ioservice docker startchkconfig docker on#CentOS 7、Debian、Ubuntucurl -sSL https:&#x2F;&#x2F;get.docker.com&#x2F; | shsystemctl start dockersystemctl enable docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、Telegram收发QQ消息">2、Telegram收发QQ消息</h4><p>安装<code>docker-compose</code>：</p><pre class="line-numbers language-none"><code class="language-none">curl -L https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.23.2&#x2F;docker-compose-&#96;uname -s&#96;-&#96;uname -m&#96; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-composechmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose#验证是否安装成功docker-compose --version#返回以下信息即安装成功docker-compose version 1.23.2, build 1110ad01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拉取<code>Docker</code>源码：</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;Earth-Online&#x2F;efb-qq-coolq-docker.gitcd efb-qq-coolq-docker#编辑config.yaml配置文件nano ehforward_config&#x2F;profiles&#x2F;default&#x2F;blueset.telegram&#x2F;config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改如下：</p><pre class="line-numbers language-none"><code class="language-none">#token和userid参数获取方法查看上面的手动安装教程token: &quot;你的TG机器人Token&quot;admins:- 你的Userid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后再编辑<code>docker-compose.yml</code>文件：</p><pre class="line-numbers language-none"><code class="language-none">nano docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改如下：</p><pre class="line-numbers language-none"><code class="language-none">- VNC_PASSWD&#x3D;你的密码- COOLQ_ACCOUNT&#x3D;你的qq账号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>后台启动：</p><pre class="line-numbers language-none"><code class="language-none">#第一次启动会构建镜像，所以会慢点docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后打开<code>ip:9801</code>登陆<code>novnc</code>后完成<code>coolq</code>登陆操作。如果该地址打不开，请检查下防火墙。</p><h4 id="3、Telegram收发微信消息">3、Telegram收发微信消息</h4><pre class="line-numbers language-none"><code class="language-none">#拉取源码git clone https:&#x2F;&#x2F;github.com&#x2F;mikubill&#x2F;efb-wechat-docker.git#构建镜像cd efb-wechat-docker &amp;&amp; docker build -t mikubill&#x2F;efbwechat .#启动镜像，TOKEN为TG机器人Token、ADMIN为你的Userid，获取方法查看上面的手动安装教程docker run -d -t --name &quot;efbwechat&quot; -e TOKEN&#x3D;xxxx -e ADMIN&#x3D;xxxx mikubill&#x2F;efbwechat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后获取微信登录验证码，使用命令：</p><pre class="line-numbers language-none"><code class="language-none">docker logs -f efbwechat <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扫描登录即可。</p><p>最后这里都没有给微信添加额外的配置文件，直接使用默认的微信配置，如果想扩展微信功能的可以参考→<a href="https://github.com/blueset/efb-wechat-slave#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BE%8B">传送门</a>，不过由于模块使用的微信网页版，所以支持的功能是有限的，比如：没有朋友圈、不能发语音、位置等等，一般来说也够用了，至于<code>QQ</code>的话，功能肯定受<code>酷Q</code>限制，暂时不能处理好友请求处理，加群请求处理，语音发送/接收等，对于<code>Facebook Messenger</code>模块的话，有需求的可以自己试试安装配置。</p><blockquote><p>本文转载自<a href="https://www.moerats.com/archives/931/">Rat’s Blog</a>。</p><p>感谢原作者，以及开源世界。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> QQ </tag>
            
            <tag> Telegram </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
